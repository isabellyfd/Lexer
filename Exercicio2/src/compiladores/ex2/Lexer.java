/* The following code was generated by JFlex 1.6.1 */

package compiladores.ex2;

import compiladores.ex2.Delimiters;
import compiladores.ex2.Identifier;
import compiladores.ex2.KeyWords;
import compiladores.ex2.Number;
import compiladores.ex2.Op;
import compiladores.ex2.Tag;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>lexer.jflex</tt>
 */
public class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\6\1\7\1\7\1\7\22\0\1\1\1\15\3\0"+
    "\1\17\1\14\1\0\1\11\1\11\1\3\1\17\1\0\1\17\1\11"+
    "\1\2\1\4\11\5\1\0\1\11\1\15\1\12\1\16\2\0\32\10"+
    "\1\13\1\10\1\13\1\10\1\10\1\10\1\23\1\27\1\21\1\35"+
    "\1\36\1\41\1\10\1\40\1\30\2\10\1\22\1\10\1\31\1\34"+
    "\1\25\1\10\1\42\1\24\1\32\1\26\1\33\1\37\3\10\1\11"+
    "\1\20\1\11\7\0\1\7\u1fa2\0\1\7\1\7\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\2\4\1\5\3\6\1\1"+
    "\1\3\2\1\14\5\2\0\1\4\7\5\1\7\10\5"+
    "\1\0\2\10\17\5";

  private static int [] zzUnpackAction() {
    int [] result = new int[64];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\43\0\43\0\106\0\43\0\151\0\214\0\257"+
    "\0\43\0\322\0\257\0\365\0\322\0\322\0\u0118\0\u013b"+
    "\0\u015e\0\u0181\0\u01a4\0\u01c7\0\u01ea\0\u020d\0\u0230\0\u0253"+
    "\0\u0276\0\u0299\0\u02bc\0\u02df\0\u0302\0\u0325\0\u0348\0\u036b"+
    "\0\u038e\0\u03b1\0\u03d4\0\u03f7\0\u041a\0\u036b\0\u043d\0\u0460"+
    "\0\u0483\0\u04a6\0\u04c9\0\u04ec\0\u050f\0\u0532\0\u0555\0\u0302"+
    "\0\u0325\0\u0578\0\u059b\0\u05be\0\u05e1\0\u0604\0\u0627\0\u064a"+
    "\0\u066d\0\u0690\0\u06b3\0\u06d6\0\u06f9\0\u071c\0\u073f\0\u0762";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[64];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\3\1\2"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\5"+
    "\1\17\1\20\2\10\1\21\1\22\1\10\1\23\1\24"+
    "\1\25\1\26\1\27\2\10\1\30\1\31\1\10\1\32"+
    "\1\33\46\0\1\34\37\0\6\35\2\0\37\35\2\36"+
    "\2\0\33\35\4\0\2\37\2\0\1\40\2\0\1\40"+
    "\5\0\22\40\12\0\1\5\44\0\1\5\46\0\1\5"+
    "\26\0\2\37\2\0\1\40\2\0\1\40\5\0\1\40"+
    "\1\41\20\40\4\0\2\37\2\0\1\40\2\0\1\40"+
    "\5\0\11\40\1\42\10\40\4\0\2\37\2\0\1\40"+
    "\2\0\1\40\5\0\5\40\1\43\14\40\4\0\2\37"+
    "\2\0\1\40\2\0\1\40\5\0\13\40\1\44\6\40"+
    "\4\0\2\37\2\0\1\40\2\0\1\40\5\0\10\40"+
    "\1\45\7\40\1\46\1\40\4\0\2\37\2\0\1\40"+
    "\2\0\1\40\5\0\15\40\1\47\4\40\4\0\2\37"+
    "\2\0\1\40\2\0\1\40\5\0\17\40\1\50\1\40"+
    "\1\51\4\0\2\37\2\0\1\40\2\0\1\40\5\0"+
    "\13\40\1\52\6\40\4\0\2\37\2\0\1\40\2\0"+
    "\1\40\5\0\1\40\1\53\20\40\4\0\2\37\2\0"+
    "\1\40\2\0\1\40\5\0\17\40\1\54\2\40\4\0"+
    "\2\37\2\0\1\40\2\0\1\40\5\0\2\40\1\55"+
    "\17\40\4\0\2\37\2\0\1\40\2\0\1\40\5\0"+
    "\15\40\1\56\4\40\3\34\1\57\37\34\4\0\2\60"+
    "\35\0\4\35\2\61\2\0\33\35\4\0\2\37\45\0"+
    "\1\40\2\0\1\40\5\0\22\40\10\0\1\40\2\0"+
    "\1\40\5\0\2\40\1\62\17\40\10\0\1\40\2\0"+
    "\1\40\5\0\2\40\1\63\17\40\10\0\1\40\2\0"+
    "\1\40\5\0\6\40\1\64\13\40\10\0\1\40\2\0"+
    "\1\40\5\0\13\40\1\65\6\40\10\0\1\40\2\0"+
    "\1\40\5\0\11\40\1\46\10\40\10\0\1\40\2\0"+
    "\1\40\5\0\16\40\1\46\3\40\10\0\1\40\2\0"+
    "\1\40\5\0\7\40\1\66\12\40\10\0\1\40\2\0"+
    "\1\40\5\0\5\40\1\67\14\40\10\0\1\40\2\0"+
    "\1\40\5\0\7\40\1\70\12\40\10\0\1\40\2\0"+
    "\1\40\5\0\3\40\1\67\16\40\10\0\1\40\2\0"+
    "\1\40\5\0\7\40\1\71\12\40\10\0\1\40\2\0"+
    "\1\40\5\0\1\40\1\53\20\40\10\0\1\40\2\0"+
    "\1\40\5\0\11\40\1\72\10\40\2\34\1\3\1\57"+
    "\37\34\10\0\1\40\2\0\1\40\5\0\3\40\1\66"+
    "\16\40\10\0\1\40\2\0\1\40\5\0\11\40\1\73"+
    "\10\40\10\0\1\40\2\0\1\40\5\0\1\40\1\73"+
    "\20\40\10\0\1\40\2\0\1\40\5\0\1\40\1\74"+
    "\20\40\10\0\1\40\2\0\1\40\5\0\3\40\1\46"+
    "\16\40\10\0\1\40\2\0\1\40\5\0\15\40\1\46"+
    "\4\40\10\0\1\40\2\0\1\40\5\0\14\40\1\46"+
    "\5\40\10\0\1\40\2\0\1\40\5\0\1\40\1\67"+
    "\20\40\10\0\1\40\2\0\1\40\5\0\5\40\1\75"+
    "\14\40\10\0\1\40\2\0\1\40\5\0\7\40\1\76"+
    "\12\40\10\0\1\40\2\0\1\40\5\0\15\40\1\77"+
    "\4\40\10\0\1\40\2\0\1\40\5\0\21\40\1\100"+
    "\10\0\1\40\2\0\1\40\5\0\1\46\21\40\10\0"+
    "\1\40\2\0\1\40\5\0\2\40\1\100\17\40\10\0"+
    "\1\40\2\0\1\40\5\0\10\40\1\46\11\40";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1925];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\1\1\1\11\3\1\1\11\22\1\2\0"+
    "\21\1\1\0\21\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[64];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count =