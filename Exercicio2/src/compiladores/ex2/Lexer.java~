/* The following code was generated by JFlex 1.6.1 */

package compiladores.ex2;

import compiladores.ex2.Delimiters;
import compiladores.ex2.Identifier;
import compiladores.ex2.KeyWords;
import compiladores.ex2.Number;
import compiladores.ex2.Op;
import compiladores.ex2.Tag;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>lexer.jflex</tt>
 */
public class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\6\1\7\1\7\1\7\22\0\1\1\1\36\3\0"+
    "\1\40\1\34\1\0\1\41\1\41\1\3\1\40\1\0\1\40\1\41"+
    "\1\2\1\4\11\5\1\0\1\41\1\36\1\35\1\37\2\0\32\10"+
    "\1\42\1\10\1\42\1\10\1\10\1\10\1\13\1\17\1\11\1\25"+
    "\1\21\1\32\1\10\1\31\1\20\2\10\1\12\1\10\1\24\1\27"+
    "\1\15\1\10\1\33\1\14\1\23\1\16\1\26\1\30\1\22\2\10"+
    "\1\41\1\43\1\41\7\0\1\7\u1fa2\0\1\7\1\7\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\2\4\15\5\1\1\1\6"+
    "\1\3\1\1\2\6\1\1\2\0\1\4\7\5\1\7"+
    "\11\5\1\0\2\10\22\5";

  private static int [] zzUnpackAction() {
    int [] result = new int[68];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\44\0\44\0\110\0\44\0\154\0\220\0\264"+
    "\0\330\0\374\0\u0120\0\u0144\0\u0168\0\u018c\0\u01b0\0\u01d4"+
    "\0\u01f8\0\u021c\0\u0240\0\u0264\0\u0288\0\u02ac\0\u02ac\0\u02ac"+
    "\0\44\0\264\0\u02d0\0\u02f4\0\u0318\0\u033c\0\u0360\0\u0384"+
    "\0\u03a8\0\u03cc\0\u03f0\0\u0414\0\u0438\0\u0384\0\u045c\0\u0480"+
    "\0\u04a4\0\u04c8\0\u04ec\0\u0510\0\u0534\0\u0558\0\u057c\0\u05a0"+
    "\0\u0318\0\u033c\0\u05c4\0\u05e8\0\u060c\0\u0630\0\u0654\0\u0678"+
    "\0\u069c\0\u06c0\0\u06e4\0\u0708\0\u072c\0\u0750\0\u0774\0\u0798"+
    "\0\u07bc\0\u07e0\0\u0804\0\u0828";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[68];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\3\1\2"+
    "\1\10\1\11\2\10\1\12\1\13\1\10\1\14\1\15"+
    "\1\16\1\10\1\17\1\20\1\10\1\21\1\10\1\22"+
    "\1\10\1\23\1\24\1\25\1\26\1\27\1\30\1\5"+
    "\1\31\1\32\1\33\47\0\1\34\40\0\6\35\2\0"+
    "\40\35\2\36\2\0\34\35\4\0\2\37\2\0\24\40"+
    "\6\0\1\40\5\0\2\37\2\0\2\40\1\41\21\40"+
    "\6\0\1\40\5\0\2\37\2\0\13\40\1\42\10\40"+
    "\6\0\1\40\5\0\2\37\2\0\6\40\1\43\15\40"+
    "\6\0\1\40\5\0\2\37\2\0\17\40\1\44\4\40"+
    "\6\0\1\40\5\0\2\37\2\0\14\40\1\45\5\40"+
    "\1\46\1\40\6\0\1\40\5\0\2\37\2\0\2\40"+
    "\1\47\7\40\1\50\11\40\6\0\1\40\5\0\2\37"+
    "\2\0\21\40\1\51\1\40\1\52\6\0\1\40\5\0"+
    "\2\37\2\0\11\40\1\53\12\40\6\0\1\40\5\0"+
    "\2\37\2\0\17\40\1\54\4\40\6\0\1\40\5\0"+
    "\2\37\2\0\21\40\1\55\2\40\6\0\1\40\5\0"+
    "\2\37\2\0\3\40\1\56\20\40\6\0\1\40\5\0"+
    "\2\37\2\0\11\40\1\57\12\40\6\0\1\40\35\0"+
    "\1\5\44\0\1\5\51\0\1\5\3\34\1\60\40\34"+
    "\4\0\2\61\36\0\4\35\2\62\2\0\34\35\4\0"+
    "\2\37\46\0\24\40\6\0\1\40\11\0\3\40\1\63"+
    "\20\40\6\0\1\40\11\0\3\40\1\64\20\40\6\0"+
    "\1\40\11\0\7\40\1\65\14\40\6\0\1\40\11\0"+
    "\17\40\1\66\4\40\6\0\1\40\11\0\13\40\1\46"+
    "\10\40\6\0\1\40\11\0\4\40\1\67\17\40\6\0"+
    "\1\40\11\0\13\40\1\70\10\40\6\0\1\40\11\0"+
    "\10\40\1\71\13\40\6\0\1\40\11\0\6\40\1\67"+
    "\15\40\6\0\1\40\11\0\20\40\1\46\3\40\6\0"+
    "\1\40\11\0\10\40\1\72\13\40\6\0\1\40\11\0"+
    "\10\40\1\73\13\40\6\0\1\40\11\0\2\40\1\47"+
    "\21\40\6\0\1\40\11\0\13\40\1\74\10\40\6\0"+
    "\1\40\1\0\2\34\1\3\1\60\40\34\10\0\4\40"+
    "\1\71\17\40\6\0\1\40\11\0\13\40\1\75\10\40"+
    "\6\0\1\40\11\0\2\40\1\75\21\40\6\0\1\40"+
    "\11\0\2\40\1\76\21\40\6\0\1\40\11\0\11\40"+
    "\1\46\12\40\6\0\1\40\11\0\11\40\1\77\12\40"+
    "\6\0\1\40\11\0\4\40\1\46\17\40\6\0\1\40"+
    "\11\0\15\40\1\46\6\40\6\0\1\40\11\0\2\40"+
    "\1\67\21\40\6\0\1\40\11\0\6\40\1\100\15\40"+
    "\6\0\1\40\11\0\10\40\1\101\13\40\6\0\1\40"+
    "\11\0\11\40\1\102\12\40\6\0\1\40\11\0\14\40"+
    "\1\103\7\40\6\0\1\40\11\0\23\40\1\104\6\0"+
    "\1\40\11\0\1\40\1\46\22\40\6\0\1\40\11\0"+
    "\3\40\1\104\20\40\6\0\1\40\11\0\15\40\1\71"+
    "\6\40\6\0\1\40\11\0\14\40\1\46\7\40\6\0"+
    "\1\40\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[2124];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\1\1\1\11\23\1\1\11\2\1\2\0"+
    "\22\1\1\0\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[68];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the c